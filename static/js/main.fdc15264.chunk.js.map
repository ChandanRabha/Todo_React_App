{"version":3,"sources":["components/add_todo/AddTodo.component.js","components/todo/Todo.component.js","components/todoList/TodoList.component.js","App.js","index.js"],"names":["AddTodo","props","className","onSubmit","e","preventDefault","inputTodos","setTodos","todos","text","id","Math","floor","random","completed","setInputTodos","style","display","type","name","placeholder","onChange","target","value","setStatus","Todo","todo","onClick","map","t","filter","et","TodoList","filterTodos","App","useState","status","setFilterTodo","useEffect","getLocalTodos","statCheck","saveLocalTodos","td","localStorage","setItem","JSON","stringify","getItem","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdc15264.chunk.js","sourcesContent":["import './AddTodo.styles.css'\r\nexport const AddTodo= (props) => {\r\n    const Submitistener=(e)=>{\r\n        e.preventDefault()\r\n        //checking if input field is empty by checking the inptText value which changes with onChangeListener\r\n        if(props.inputTodos===\"\"){}\r\n        else{\r\n              props.setTodos([\r\n                            ...props.todos,\r\n                            {text:props.inputTodos,id:Math.floor(Math.random() * Math.floor(10000)),completed:false}\r\n                         ])\r\n              props.setInputTodos(\"\")//clearing the field\r\n        }\r\n    }\r\n    //function which updates the value of inputTodos depending on the entered input.\r\n    const onChangeListener= (e)=>{\r\n          props.setInputTodos(e.target.value)      \r\n       \r\n    }\r\n\r\n\r\n    return (\r\n             <form className='addTodo'  onSubmit={Submitistener} >\r\n             <div style={{display:'flex'}}><input type='text' name='inptTodo' placeholder='Remind Me To'  onChange={onChangeListener} value={props.inputTodos}/>    <button id='addTodo'><i className=\"fas fa-plus-square\"></i></button></div>        \r\n             <select onChange={(e)=>props.setStatus(e.target.value)}><option>All</option><option>Pending</option><option>Completed</option></select>\r\n             </form>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Todo.styles.css'\r\n\r\nexport const Todo = ({todo,setTodos,todos}) => {\r\n    \r\n    const deleteHandler=()=>{\r\n         setTodos(todos.filter(et=>et.id !== todo.id))\r\n    }\r\n    const checkHandler=()=>\r\n        { \r\n               setTodos(todos.map(t=>\r\n                (\r\n                    t.id===todo.id?{...t,completed:!t.completed}:t\r\n                )))\r\n        }\r\n    return (\r\n        <li className={`todo ${todo.completed? \"completed\": ''}` }><h5>{todo.text}</h5> <div><button onClick={checkHandler} className='check'><i className=\"far fa-check-circle\"></i></button><button className='delete' onClick={deleteHandler}><i className=\"far fa-trash-alt\"></i></button></div></li>\r\n    )\r\n}\r\n","import './TodoList.styles.css'\r\nimport {Todo} from '../../components/todo/Todo.component'\r\nexport const TodoList= ({todos,setTodos,filterTodos}) => {\r\n    return (\r\n        <div className='todoContainer'>\r\n            <h2> Your Todo List</h2>\r\n            <ul>         {    \r\n            filterTodos.map(todo =>(\r\n                  <Todo key={`${todo.id} ${Math.random(1000)}`} todo={todo} setTodos={setTodos} todos={todos} />\r\n            ))\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport {AddTodo} from './components/add_todo/AddTodo.component'\nimport {TodoList} from './components/todoList/TodoList.component'\nimport {useState,useEffect} from 'react';\nfunction App() {\n  const [inputTodos,setInputTodos]= useState('');\n  const [todos,setTodos]= useState([])\n  const [status,setStatus]=useState('completed')\n  const [filterTodos,setFilterTodo]= useState(['']);\n\n    useEffect(()=>{\n      getLocalTodos();\n    },[])\n    useEffect(()=>{\n      statCheck();\n      saveLocalTodos();\n      // eslint-disable-next-line\n    },[todos,status]);\n\n  const statCheck=()=>{\n    switch (status){\n      case \"Completed\":\n        setFilterTodo(todos.filter(td=>td.completed===true))\n        break;\n      case \"Pending\":\n        setFilterTodo(todos.filter(td=>td.completed===false))\n        break;\n      case \"All\":\n        setFilterTodo(todos)\n        break;\n      default:\n        setFilterTodo(todos)\n        break;\n    }\n  }\n  //save todos to local storage\nconst saveLocalTodos=()=>{\n    localStorage.setItem('todos',JSON.stringify(todos))\n}\nconst getLocalTodos=()=>{\n  if(!localStorage.getItem('todos')){\n    localStorage.setItem('todos',JSON.stringify([]))\n  }\n  else{\n   setTodos(JSON.parse(localStorage.getItem('todos')))\n  }\n}\n\n    return (\n    <div className=\"App\">\n      <h2>TODO REACT APP</h2>\n      <AddTodo setInputTodos={setInputTodos} inputTodos={inputTodos} todos={todos} setTodos={setTodos} setStatus={setStatus}  />\n      <TodoList filterTodos={filterTodos} todos={todos} setTodos={setTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}